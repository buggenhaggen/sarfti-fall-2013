Источники:
http://msdn.microsoft.com/ru-ru/library/vstudio/ayazw934(v=vs.100).aspx
http://msdn.microsoft.com/ru-ru/library/678hzkk9.aspx



Тип данных Float:

Тип float сохраняется как четырехбайтовое число одиночной точности с плавающей запятой. 
Он представляет 32-разрядное значение одиночной точности в формате IEEE 754.

Самое большое число, которое может быть представлено типом float, — это 3,4E + 38 
(положительные или отрицательные) с точностью около 7 разрядов, 
а самое маленькое — 1E - 44. Тип float также может представлять NaN (не число), 
положительную и отрицательную бесконечность, а также положительный и отрицательный ноль.

Этот тип используется в приложениях, где нужны большие числа, но не нужна высокая точность. 
Если требуется очень высокая точность, следует использовать тип данных Decimal.

Размер Double:

Ключевое слово double обозначает простой тип,
используемый для хранения 64-разрядных значений с плавающей запятой.

Приблизительный диапазон ±5.0 ? 10?324 до ±1.7 ? 10308
Точность 15-16 знаков

Гранулярность:

Гранулярность выделения памяти определяет, блоками каких размеров вы можете оперировать при выделении и освобождении памяти. 
Т.е. гранулярность выделения памяти в 64 Кб означает, что вы можете выделять только блоки памяти, размер которых кратен 64 Кб.
 
Little-endian:

"Обратный порядок байт" в исполняемом коде. Порядок от младшего к старшему (англ. little-endian):
 запись начинается с младшего и заканчивается старшим.Этот порядок записи принят в памяти персональных компьютеров с x86-процессорами, 
в связи с чем иногда его называют интеловский порядок байт (по названию фирмы-создателя архитектуры x86).

Big-endian:

Порядок от старшего к младшему или (англ. big-endian, дословно: «тупоконечный»): 
запись начинается со старшего и заканчивается младшим. Этот порядок является стандартным для протоколов TCP/IP,
он используется в заголовках пакетов данных и во многих протоколах более высокого уровня, разработанных 
для использования поверх TCP/IP.